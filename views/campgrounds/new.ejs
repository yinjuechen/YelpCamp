<% include ../partials/header %>
<div class="container">
    <div class="row">
        <h1 class="col-12 text-center mt-1 mb-2">Create a New Campground</h1>
        <div style="width: 30%; margin: 0px auto;">
            <form action="/campgrounds" , method="POST" enctype="multipart/form-data">
                <div class="form-group">
                    <label for="name">Name</label>
                    <input class="form-control mr-2" type="text" , placeholder="name" name="name">
                </div>
                <div class="form-group">
                    <label for="price">Price</label>
                    <input class="form-control" type="number" name="price", placeholder="price" min="0.01" step="0.01">
                </div>
                <!--<div class="form-group">-->
                    <!--<label for="image">Image Url</label>-->
                    <!--<input class="form-control" type="text" , placeholder="image url" name="online_image">-->
                <!--</div>-->
                <div class="form-group">
                    <p>Upload an image</p>
                    <input type="file" name="local_image" id="local_image" accept="image/*">
                </div>
                <div class="form-group">
                    <label for="description">Description</label>
                    <input type="text", placeholder="description", name = "description" class="form-control">
                </div>
                <div class="form-group">
                    <label for="location">Location</label>
                    <!--<input class="form-control" type="text" name="location" id="location" placeholder="Yosemite National Park, CA">-->
                    <input id="pac-input" class="controls form-control" type="text" placeholder="Location" name="location">
                </div>
                <div class="form-group">
                    <button class="btn btn-lg btn-primary btn-block">Submit!</button>
                </div>
            </form>
            <a class="col-12" href="/campgrounds"><i class="fa fa-arrow-left"></i> Go Back</a>
        </div>
    </div>
</div>
<script>
    // This example adds a search box to a map, using the Google Place Autocomplete
    // feature. People can enter geographical searches. The search box will return a
    // pick list containing a mix of places and predicted search terms.

    // This example requires the Places library. Include the libraries=places
    // parameter when you first load the API. For example:
    // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">

    function initAutocomplete() {
        // Create the search box and link it to the UI element.
        var input = document.getElementById('pac-input');
        var searchBox = new google.maps.places.SearchBox(input);

        var markers = [];
        // Listen for the event fired when the user selects a prediction and retrieve
        // more details for that place.
        searchBox.addListener('places_changed', function() {
            var places = searchBox.getPlaces();

            if (places.length == 0) {
                return;
            }

            // Clear out the old markers.
            markers.forEach(function(marker) {
                marker.setMap(null);
            });
            markers = [];

            // For each place, get the icon, name and location.
            var bounds = new google.maps.LatLngBounds();
            places.forEach(function(place) {
                if (!place.geometry) {
                    console.log("Returned place contains no geometry");
                    return;
                }
                var icon = {
                    url: place.icon,
                    size: new google.maps.Size(71, 71),
                    origin: new google.maps.Point(0, 0),
                    anchor: new google.maps.Point(17, 34),
                    scaledSize: new google.maps.Size(25, 25)
                };

                // Create a marker for each place.
                markers.push(new google.maps.Marker({
                    map: map,
                    icon: icon,
                    title: place.name,
                    position: place.geometry.location
                }));

                if (place.geometry.viewport) {
                    // Only geocodes have viewport.
                    bounds.union(place.geometry.viewport);
                } else {
                    bounds.extend(place.geometry.location);
                }
            });
        });
    }
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=<%= process.env.GoogleMapKey%>&libraries=places&callback=initAutocomplete"
        async defer></script>
<% include ../partials/footer %>